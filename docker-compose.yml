version: "3.9"
services:
  
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: LoginService

  postgresql-db:
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: root
      POSTGRES_DB: test

  rabbit-mq:
    image: rabbitmq:3-alpine
    restart: always

  mysql-db:
    image: ubuntu/mysql
    restart: always
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: secretpass
      MYSQL_DATABASE: userData

  user:
    build: User/.
    volumes:
      - ./User:/code
    environment:
      WAIT_HOSTS: mysql-db:3306
    links:
      - mysql-db

  item:
    build: Item/.
    restart: always
    volumes:
      - ./Item:/code
    environment:
      WAIT_HOSTS: postgresql-db:5432
    links:
      - postgresql-db

  frontend:
    build: Frontend/.
    restart: always
    ports:
      - "4567:4567"
    depends_on:
      - item
      - user
      - auction
    links:
      - mongo
    environment:
      WAIT_HOSTS: mongo:27017
    volumes:
      - ./Frontend:/code

  auction:
    build: Auction/.
    restart: always
    depends_on:
      - user
      - messenger
    command: ["./wait-for-it.sh", "db:5432", "--", "python", "app.py"]
    links:
      - mongo
    environment:
      WAIT_HOSTS: mongo:27017
    volumes:
      - ./Auction:/code

  messenger:
    build: Messenger/.
    ports:
      - "465:465"
    links:
      - rabbit-mq
    environment:
      WAIT_HOSTS: rabbit-mq:5672
    volumes:
      - ./Messenger:/code